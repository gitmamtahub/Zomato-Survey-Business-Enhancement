# -*- coding: utf-8 -*-
"""zomato.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uHBrdBRb53m7drIcxqjCJxgwjwCXavrR
"""

import numpy as np
import pandas as pd
import warnings
warnings.filterwarnings('ignore')
import matplotlib.pyplot as plt
import seaborn as sns

data=pd.read_csv("zomato.csv",encoding='latin-1')

data.head()

data['Cuisines'].value_counts()

data=data.rename(columns={'ï»¿Restaurant ID':'Restaurant ID'})

data.head()

data.info()

data['Is delivering now'].value_counts()

data.isnull().sum()

data.shape

data['Average Cost for two'].describe()

country=pd.read_excel("Country-Code.xlsx")

country

df=pd.merge(data,country,on="Country Code",how="left")
df.head()

!pip install plotly

countrys=df['Country'].value_counts()
country=pd.DataFrame(countrys).reset_index()
country.columns=['Country','Count']
country

country.loc[country['Count']<400,'Country']='Others'

country

country=country.groupby('Country').agg({'Count':'sum'})
country

from pickle import TRUE
# making pie chart for country wise distributuion
import plotly.express as px
from plotly.offline import init_notebook_mode, plot, iplot

labels = list(country.index)
values = list(country.Count)
# labels gives names and values gives count
fig = {
    "data":[
        {
            "labels" : labels,
            "values" : values,
            "hoverinfo" : 'label+percent',
            "domain": {"x": [0.5,0.5]},
            "hole" : 0.6,
            "type" : "pie",
            "rotation":120,
        },
    ],
    "layout": {
        "title" : "Restaurants Density Presence around the World",
        "annotations": [
            {
                "font": {"size":20},
                "showarrow": True,
                "text": "Countries",
                "x":0.2,
                "y":0.9,
            },
        ],
        "autosize" : False,

    }
}

iplot(fig)

# making pie chart for country wise distributuion
import plotly.express as px
from plotly.offline import init_notebook_mode, plot, iplot

labels = list(df.Country.value_counts().index)
values = list(df.Country.value_counts().values)
# labels gives names and values gives count
fig = {
    "data":[
        {
            "labels" : labels,
            "values" : values,
            "hoverinfo" : 'label+percent',
            "domain": {"x": [0, .9]},
            "hole" : 0.6,
            "type" : "pie",
            "rotation":120,
        },
    ],
    "layout": {
        "title" : "Restaurants Density Presence around the World",
        "annotations": [
            {
                "font": {"size":20},
                "showarrow": True,
                "text": "Countries",
                "x":0.2,
                "y":0.9,
            },
        ],
        "autosize" : False ,
      }
}

iplot(fig)

#rating=df.groupby(['Aggregate rating','Rating color','Rating text']).size().reset_index().rename(columns={0:"Rating Count"})
#rating.head()

ratings=df.groupby(['Rating text']).agg({'Aggregate rating':'count'}).rename(columns={'Aggregate rating': 'count'})
ratings

plt.figure(figsize=(12,6))
# plt.xticks(rotation=75)
plt.title('Rating Text')
sns.barplot(x=ratings.index, y=ratings['count']);

india=df[df['Country']=='India']
india.head()

india.Cuisines.value_counts()

india['Is delivering now'].value_counts()

new=india[india['Is delivering now']=='Yes']

zomato=new.groupby(['City']).agg({'Aggregate rating':'count'}).rename(columns={'Aggregate rating': 'count'})
zomato

plt.figure(figsize=(12,6))
# plt.xticks(rotation=75)
plt.title('City with Zomato delivery ')
sns.barplot(x=zomato.index, y=zomato['count']);

india.isnull().sum()

citys=india['City'].value_counts()
city=pd.DataFrame(citys).reset_index()
city.columns=['City','Count']
city

city.loc[city['Count']<250,'City']='Others'
city

city=city.groupby('City').agg({'Count':'sum'})
city

labels = list(city.index)
values = list(city.Count)
# labels gives names and values gives count
fig = {
    "data":[
        {
            "labels" : labels,
            "values" : values,
            "hoverinfo" : 'label+percent',
            "domain": {"x": [0, .9]},
            "hole" : 0.6,
            "type" : "pie",
            "rotation":120,
        },
    ],
    "layout": {
        "title" : "Restaurants Density Presence in India",
        "annotations": [
            {
                "font": {"size":20},
                "showarrow": True,
                "text": "Cities",
                "x":0.2,
                "y":0.9,
            },
        ],
        "autosize" : False ,
      }
}

iplot(fig)

delhi=india[(india.City=="New Delhi")]
plt.figure(figsize=(12,6))
sns.barplot(x=delhi.Locality.value_counts().head(10),y=delhi.Locality.value_counts().head(10).index)

plt.ylabel(None)
plt.xlabel("Number of restaurants")
plt.title("Restaurants-Area Listing in New Delhi")

now=delhi[delhi['Is delivering now']=='Yes'][['Restaurant Name','Locality','Cuisines','Rating text']].sort_values(by='Rating text').reset_index()
now

cp=delhi[delhi.Locality=='Connaught Place']
cp.head()

ratings1=cp.groupby(['Rating text']).agg({'Aggregate rating':'count'}).rename(columns={'Aggregate rating': 'count'})
ratings1

plt.figure(figsize=(12,6))
# plt.xticks(rotation=75)
plt.title('Rating Text')
sns.barplot(x=ratings1.index, y=ratings1['count']);

cp['Average Cost for two'].value_counts()

cp['Average Cost for two'].describe()

cp['Is delivering now'].value_counts()

cp['Has Online delivery'].value_counts()

cp['Has Table booking'].value_counts()

# Top 5 Restaurants in CP
top=cp[cp["Rating text"].isin(['Excellent','Very Good'])].sort_values(by='Rating text').reset_index()
top[['Restaurant Name','Rating text','Cuisines','Average Cost for two']].head()

top=cp[cp["Rating text"].isin(['Excellent','Very Good','Good'])].sort_values(by='Rating text').reset_index()
top['Average Cost for two'].value_counts()

top.head()

top['Average Cost for two'].describe()

top.columns

top.shape

ph1=top[(top['Has Table booking']=='Yes') & (top['Has Online delivery']=='Yes')]
ph1[['Restaurant Name','Cuisines', 'Average Cost for two']]

len(ph1)

ph2=top[(top['Has Online delivery']=='No') | (top['Has Table booking']=='No')]
ph2[['Restaurant Name','Cuisines', 'Average Cost for two']]

top

tail=cp[cp['Rating text'].isin(['Average','Not rated'])].sort_values(by='Rating text').reset_index()
len(tail)

tail[['Restaurant Name','Cuisines', 'Average Cost for two']]

ph3=tail[(tail['Has Table booking']=='Yes') & (tail['Has Online delivery']=='Yes')]
ph3[['Restaurant Name','Cuisines', 'Average Cost for two']]

ph4=tail[(tail['Has Table booking']=='No') | (tail['Has Online delivery']=='No')]
ph4[['Restaurant Name','Cuisines', 'Average Cost for two']]